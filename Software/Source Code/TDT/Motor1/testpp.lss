
testpp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000108  0000019c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000108  00000000  00000000  00000094  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000000  00800100  00000108  0000019c  2**0
                  ALLOC
  3 .noinit       00000000  00800100  00800100  0000019c  2**0
                  CONTENTS
  4 .eeprom       00000000  00810000  00810000  0000019c  2**0
                  CONTENTS
  5 .stab         00000408  00000000  00000000  0000019c  2**2
                  CONTENTS, READONLY, DEBUGGING
  6 .stabstr      00000084  00000000  00000000  000005a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000014  00000000  00000000  00000628  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 0000001b  00000000  00000000  0000063c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000000b1  00000000  00000000  00000657  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00000064  00000000  00000000  00000708  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   000000a8  00000000  00000000  0000076c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000057  00000000  00000000  00000814  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c <__ctors_end>
   4:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
   8:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
   c:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  10:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  14:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  18:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  1c:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  20:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  24:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  28:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  2c:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  30:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  34:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  38:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  3c:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  40:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  44:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  48:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  4c:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  50:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  54:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  58:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  5c:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  60:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  64:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  68:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  6c:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  70:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  74:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  78:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  7c:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  80:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  84:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>
  88:	0c 94 63 00 	jmp	0xc6 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 e0       	ldi	r30, 0x08	; 8
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	11 e0       	ldi	r17, 0x01	; 1
  b4:	a0 e0       	ldi	r26, 0x00	; 0
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 30       	cpi	r26, 0x00	; 0
  be:	b1 07       	cpc	r27, r17
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0c 94 65 00 	jmp	0xca <main>

000000c6 <__bad_interrupt>:
  c6:	0c 94 00 00 	jmp	0x0 <__vectors>

000000ca <main>:



int main(void)
{
  ca:	cf ef       	ldi	r28, 0xFF	; 255
  cc:	d0 e1       	ldi	r29, 0x10	; 16
  ce:	de bf       	out	0x3e, r29	; 62
  d0:	cd bf       	out	0x3d, r28	; 61
	cli();
  d2:	f8 94       	cli

	DDRA = 255;	
  d4:	8f ef       	ldi	r24, 0xFF	; 255
  d6:	8a bb       	out	0x1a, r24	; 26
	PORTA = 0;
  d8:	1b ba       	out	0x1b, r1	; 27


	while(1)
	{
		PORTA = 255;
  da:	8b bb       	out	0x1b, r24	; 27
  dc:	2f e9       	ldi	r18, 0x9F	; 159
  de:	3b eb       	ldi	r19, 0xBB	; 187
  e0:	4d e0       	ldi	r20, 0x0D	; 13
  e2:	50 e0       	ldi	r21, 0x00	; 0

		for(long i=0; i<900000; i++)
  e4:	22 53       	subi	r18, 0x32	; 50
  e6:	30 40       	sbci	r19, 0x00	; 0
  e8:	40 40       	sbci	r20, 0x00	; 0
  ea:	50 40       	sbci	r21, 0x00	; 0
  ec:	57 ff       	sbrs	r21, 7
  ee:	fa cf       	rjmp	.-12     	; 0xe4 <main+0x1a>
		{}
		
	
		PORTA=0;
  f0:	1b ba       	out	0x1b, r1	; 27
  f2:	2f e9       	ldi	r18, 0x9F	; 159
  f4:	3b eb       	ldi	r19, 0xBB	; 187
  f6:	4d e0       	ldi	r20, 0x0D	; 13
  f8:	50 e0       	ldi	r21, 0x00	; 0

		for(long i=0; i<900000; i++)
  fa:	22 53       	subi	r18, 0x32	; 50
  fc:	30 40       	sbci	r19, 0x00	; 0
  fe:	40 40       	sbci	r20, 0x00	; 0
 100:	50 40       	sbci	r21, 0x00	; 0
 102:	57 ff       	sbrs	r21, 7
 104:	fa cf       	rjmp	.-12     	; 0xfa <main+0x30>
 106:	e9 cf       	rjmp	.-46     	; 0xda <main+0x10>
